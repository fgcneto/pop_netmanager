# Generated by Django 2.2.6 on 2020-09-03 02:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pop_inventario', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ca1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=50, verbose_name='CA-1')),
                ('ports_number', models.IntegerField(verbose_name='No de Portas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em:')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modificado em:')),
            ],
            options={
                'verbose_name': 'CA-1',
                'verbose_name_plural': 'CA-1',
                'db_table': '"pop_netmanager"."tb_ca1s"',
            },
        ),
        migrations.CreateModel(
            name='Ca1_port',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Número da Porta')),
                ('ca1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ca1_port', to='pop_netmanager.Ca1')),
            ],
            options={
                'verbose_name': 'Porta da CA-1',
                'verbose_name_plural': 'Portas da CA-1',
                'db_table': '"pop_netmanager"."tb_ca1_ports"',
            },
        ),
        migrations.CreateModel(
            name='Cdi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=50, verbose_name='CDI')),
                ('ports_number', models.IntegerField(verbose_name='No de Portas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em:')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modificado em:')),
            ],
            options={
                'verbose_name': 'CDI',
                'verbose_name_plural': 'CDI',
                'db_table': '"pop_netmanager"."tb_cdis"',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('locale_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pop_inventario.Locale')),
                ('name', models.CharField(max_length=150, verbose_name='Nome')),
                ('code', models.CharField(max_length=10, verbose_name='Código')),
                ('place', models.CharField(choices=[('0', 'Macaíba'), ('1', 'Parnamirim'), ('2', 'Natal'), ('3', 'São Gonçalo do Amarante')], max_length=1, verbose_name='Local')),
                ('entity', models.CharField(choices=[('0', 'Municipal'), ('1', 'Estadual'), ('3', 'Federal')], max_length=1, verbose_name='Entidade')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'db_table': '"pop_netmanager"."tb_clients"',
            },
            bases=('pop_inventario.locale',),
        ),
        migrations.CreateModel(
            name='Firewall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=100, verbose_name='Hostname-AP')),
                ('ipv4_publico', models.GenericIPAddressField(blank=True, null=True, verbose_name='IPV4 - Público')),
                ('ipv6_publico', models.GenericIPAddressField(blank=True, null=True, verbose_name='IPV6 - Público')),
                ('sub_rede', models.GenericIPAddressField(verbose_name='SUB-REDE')),
                ('range_ip_start', models.GenericIPAddressField(verbose_name='RANGE - INÍCIO')),
                ('range_ip_end', models.GenericIPAddressField(verbose_name='RANGE - FINAL')),
                ('obs', models.TextField(blank=True, verbose_name='Observações:')),
            ],
            options={
                'db_table': '"pop_netmanager"."tb_firewalls"',
            },
        ),
        migrations.CreateModel(
            name='Line_profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=50, verbose_name='Line Profile')),
            ],
            options={
                'verbose_name': 'Line Profile',
                'verbose_name_plural': 'Lines Profile',
                'db_table': '"pop_netmanager"."tb_lines_profile"',
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=50, verbose_name='Nome')),
                ('abbreviation', models.CharField(max_length=20, verbose_name='Sigla')),
            ],
            options={
                'verbose_name': 'Rede',
                'verbose_name_plural': 'Redes',
                'db_table': '"pop_netmanager"."tb_networks"',
            },
        ),
        migrations.CreateModel(
            name='Olt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=15, verbose_name='OLT')),
                ('ports_number', models.IntegerField(verbose_name='No de Portas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em:')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modificado em:')),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='network_olt', to='pop_netmanager.Network')),
            ],
            options={
                'verbose_name': 'OLT',
                'verbose_name_plural': 'OLTS',
                'db_table': '"pop_netmanager"."tb_olts"',
            },
        ),
        migrations.CreateModel(
            name='Onu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('onu_id', models.CharField(max_length=4, verbose_name='ONU - ID')),
                ('hostname', models.CharField(max_length=100, verbose_name='Hostname-ONU')),
                ('serial', models.CharField(max_length=50, verbose_name='Serial')),
                ('ipv4_publico', models.GenericIPAddressField(blank=True, null=True, verbose_name='IPV4 - Público')),
                ('ipv6_publico', models.GenericIPAddressField(blank=True, null=True, verbose_name='IPV6 - Público')),
                ('bw_up', models.CharField(max_length=15, verbose_name='BW-UP')),
                ('bw_down', models.CharField(max_length=15, verbose_name='BW-DW')),
                ('user1', models.CharField(max_length=10, verbose_name='USER 1')),
                ('user2', models.CharField(max_length=10, verbose_name='USER 2')),
                ('password', models.CharField(max_length=25, verbose_name='Password')),
                ('ports_number', models.IntegerField(verbose_name='No de Portas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em:')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modificado em:')),
                ('ca1_port', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ca1_port_onu', to='pop_netmanager.Ca1_port', verbose_name='Porta da CA-1')),
                ('line_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pop_netmanager.Line_profile', verbose_name='line profile')),
            ],
            options={
                'verbose_name': 'ONU - Modem',
                'verbose_name_plural': 'ONU - Modens',
                'db_table': '"pop_netmanager"."tb_onus"',
            },
        ),
        migrations.CreateModel(
            name='Onu_port',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Número da Porta')),
                ('onu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='onu_port', to='pop_netmanager.Onu')),
            ],
            options={
                'verbose_name': 'Porta da ONU',
                'verbose_name_plural': 'Portas da ONU',
                'db_table': '"pop_netmanager"."tb_onu_ports"',
            },
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=100, verbose_name='Hostname-SW')),
                ('serial', models.CharField(max_length=50, verbose_name='S/N')),
                ('mac_address', models.CharField(max_length=12, verbose_name='Endereço MAC')),
                ('ip_address', models.GenericIPAddressField(verbose_name='Endereço IP')),
                ('telnet', models.BooleanField(verbose_name='TELNET')),
                ('ssh', models.BooleanField(verbose_name='SSH')),
                ('snmp', models.BooleanField(verbose_name='SNMP')),
                ('user1', models.CharField(max_length=10, verbose_name='USER 1')),
                ('user2', models.CharField(max_length=10, verbose_name='USER 2')),
                ('sntp_client', models.BooleanField(verbose_name='SNTP Client')),
                ('default_route', models.GenericIPAddressField(verbose_name='Rota Default')),
                ('erlp', models.BooleanField(verbose_name='ERLP')),
                ('dhcp_snooping', models.BooleanField(verbose_name='DHCP SNOOPING')),
                ('port_poe', models.CharField(blank=True, max_length=5, null=True, verbose_name='Porta PoE')),
                ('ports_number', models.IntegerField(verbose_name='No de Portas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em:')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modificado em:')),
                ('onu_port', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onu_port_switches', to='pop_netmanager.Onu_port', verbose_name='Porta - ONU')),
            ],
            options={
                'verbose_name': 'Switch',
                'verbose_name_plural': 'Switches',
                'db_table': '"pop_netmanager"."tb_switches"',
                'ordering': ['hostname'],
            },
        ),
        migrations.CreateModel(
            name='Vlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=50, verbose_name='Nome')),
                ('vlan_id', models.CharField(max_length=4, unique=True, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'VLAN',
                'verbose_name_plural': 'VLANS',
                'db_table': '"pop_netmanager"."tb_vlans"',
            },
        ),
        migrations.CreateModel(
            name='Cvlan',
            fields=[
                ('vlan_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pop_netmanager.Vlan')),
            ],
            options={
                'verbose_name': 'C-VLAN',
                'verbose_name_plural': 'C-VLAN',
                'db_table': '"pop_netmanager"."tb_cvlans"',
            },
            bases=('pop_netmanager.vlan',),
        ),
        migrations.CreateModel(
            name='Vlan_management_ap',
            fields=[
                ('vlan_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pop_netmanager.Vlan')),
                ('ipv4_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Address - IPV4')),
                ('ipv6_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Address - IPV6')),
                ('ipv4_gateway', models.GenericIPAddressField(blank=True, null=True, verbose_name='Gateway IPV4')),
                ('ipv6_gateway', models.GenericIPAddressField(blank=True, null=True, verbose_name='Gateway IPV6')),
            ],
            options={
                'verbose_name': 'VLAN - GERÊNCIA AP',
                'verbose_name_plural': 'VLANS - GERÊNCIA AP',
                'db_table': '"pop_netmanager"."tb_vlan_management_ap"',
            },
            bases=('pop_netmanager.vlan',),
        ),
        migrations.CreateModel(
            name='Vlan_management_onu',
            fields=[
                ('vlan_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pop_netmanager.Vlan')),
                ('ipv4_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Address - IPV4')),
                ('ipv6_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Address - IPV6')),
                ('ipv4_gateway', models.GenericIPAddressField(blank=True, null=True, verbose_name='Gateway IPV4')),
                ('ipv6_gateway', models.GenericIPAddressField(blank=True, null=True, verbose_name='Gateway IPV6')),
            ],
            options={
                'verbose_name': 'VLAN - GERÊNCIA ONU',
                'verbose_name_plural': 'VLANS - GERÊNCIA ONU',
                'db_table': '"pop_netmanager"."tb_vlan_management_onu"',
            },
            bases=('pop_netmanager.vlan',),
        ),
        migrations.CreateModel(
            name='Vlan_management_sw',
            fields=[
                ('vlan_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pop_netmanager.Vlan')),
                ('ipv4_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Address - IPV4')),
                ('ipv6_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Address - IPV6')),
                ('ipv4_gateway', models.GenericIPAddressField(blank=True, null=True, verbose_name='Gateway IPV4')),
                ('ipv6_gateway', models.GenericIPAddressField(blank=True, null=True, verbose_name='Gateway IPV6')),
            ],
            options={
                'verbose_name': 'VLAN - GERÊNCIA SW',
                'verbose_name_plural': 'VLANS - GERÊNCIA SW',
                'db_table': '"pop_netmanager"."tb_vlan_management_sw"',
            },
            bases=('pop_netmanager.vlan',),
        ),
        migrations.CreateModel(
            name='Vman',
            fields=[
                ('vlan_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pop_netmanager.Vlan')),
            ],
            options={
                'verbose_name': 'V-MAN',
                'verbose_name_plural': 'V-MAN',
                'db_table': '"pop_netmanager"."tb_vmans"',
            },
            bases=('pop_netmanager.vlan',),
        ),
        migrations.CreateModel(
            name='Vlan_switch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em:')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modificado em:')),
                ('switch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vlan_switch', to='pop_netmanager.Switch')),
                ('vlan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='switch_vlan', to='pop_netmanager.Vlan')),
            ],
            options={
                'verbose_name': 'VLAN - Switch',
                'verbose_name_plural': 'VLANS - Switch',
                'db_table': '"pop_netmanager"."tb_vlan_switches"',
            },
        ),
        migrations.CreateModel(
            name='Vlan_port',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Número da Porta')),
                ('status', models.BooleanField(blank=True, default=False, null=True, verbose_name='Tagged')),
                ('switch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vlan_switches', to='pop_netmanager.Switch')),
                ('vlan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vlan_ports', to='pop_netmanager.Vlan')),
            ],
            options={
                'verbose_name': 'Porta da Vlan',
                'verbose_name_plural': 'Portas da Vlan',
                'db_table': '"pop_netmanager"."tb_vlan_ports"',
            },
        ),
        migrations.CreateModel(
            name='Switch_port',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Número da Porta')),
                ('enable', models.BooleanField(blank=True, default=False, null=True, verbose_name='Habilitado')),
                ('switch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='switch_ports', to='pop_netmanager.Switch')),
            ],
            options={
                'verbose_name': 'Porta do Switch',
                'verbose_name_plural': 'Portas do Switch',
                'db_table': '"pop_netmanager"."tb_switch_ports"',
            },
        ),
        migrations.CreateModel(
            name='Olt_port',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Número da Porta')),
                ('olt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='olt_port', to='pop_netmanager.Olt')),
            ],
            options={
                'verbose_name': 'Porta da OLT',
                'verbose_name_plural': 'Portas da OLT',
                'db_table': '"pop_netmanager"."tb_olt_ports"',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Nome')),
                ('email', models.EmailField(max_length=100, verbose_name='E-mail')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pop_netmanager.Client', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Contato',
                'verbose_name_plural': 'Contatos',
                'db_table': '"pop_netmanager"."tb_contacts"',
            },
        ),
        migrations.CreateModel(
            name='Cdi_port',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Número da Porta')),
                ('cdi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cdi_port', to='pop_netmanager.Cdi')),
            ],
            options={
                'verbose_name': 'Porta da CDI',
                'verbose_name_plural': 'Portas da CDI',
                'db_table': '"pop_netmanager"."tb_cdi_ports"',
            },
        ),
        migrations.AddField(
            model_name='cdi',
            name='olt_port',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='olt_port_cdi', to='pop_netmanager.Olt_port'),
        ),
        migrations.AddField(
            model_name='ca1',
            name='cdi_port',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cdi_port_ca1', to='pop_netmanager.Cdi_port'),
        ),
        migrations.AddField(
            model_name='switch',
            name='vlan_management_sw',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vlan_management_switch', to='pop_netmanager.Vlan_management_sw', verbose_name='V-LAN GERÊNCIA'),
        ),
        migrations.CreateModel(
            name='Svlan',
            fields=[
                ('vlan_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pop_netmanager.Vlan')),
                ('ipv4_publico', models.GenericIPAddressField(blank=True, null=True, verbose_name='IPV4 - PÚBLICO')),
                ('ipv6_publico', models.GenericIPAddressField(blank=True, null=True, verbose_name='IPV6 - PÚBLICO')),
                ('ipv4_privado', models.GenericIPAddressField(blank=True, null=True, verbose_name='IPV4 - PRIVADO')),
                ('ipv6_privado', models.GenericIPAddressField(blank=True, null=True, verbose_name='IPV6 - PRIVADO')),
                ('sub_rede_ipv4', models.GenericIPAddressField(blank=True, null=True, verbose_name='SUB-REDE IPV4')),
                ('sub_rede_ipv6', models.GenericIPAddressField(blank=True, null=True, verbose_name='SUB-REDE IPV6')),
                ('range_start_ipv4', models.GenericIPAddressField(blank=True, null=True, verbose_name='RANGE INÍCIO - IPV4')),
                ('range_end_ipv4', models.GenericIPAddressField(blank=True, null=True, verbose_name='RANGE FINAL - IPV4')),
                ('range_start_ipv6', models.GenericIPAddressField(blank=True, null=True, verbose_name='RANGE INÍCIO - IPV6')),
                ('range_end_ipv6', models.GenericIPAddressField(blank=True, null=True, verbose_name='RANGE FINAL - IPV6')),
                ('bw_up', models.CharField(blank=True, max_length=15, null=True, verbose_name='BW-UP')),
                ('bw_down', models.CharField(blank=True, max_length=15, null=True, verbose_name='BW-DW')),
                ('c_vlan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cvlan_svlan', to='pop_netmanager.Cvlan')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pop_netmanager.Client', verbose_name='Cliente')),
                ('firewall', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='firewall_svlan', to='pop_netmanager.Firewall')),
                ('v_man', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vman_svlan', to='pop_netmanager.Vman')),
            ],
            options={
                'verbose_name': 'S-VLAN',
                'verbose_name_plural': 'S-VLAN',
                'db_table': '"pop_netmanager"."tb_svlans"',
            },
            bases=('pop_netmanager.vlan',),
        ),
        migrations.AddField(
            model_name='onu',
            name='s_vlan',
            field=models.ManyToManyField(db_table='"pop_netmanager"."tb_onu_svlans"', to='pop_netmanager.Svlan', verbose_name='Svlan(s)'),
        ),
        migrations.AddField(
            model_name='onu',
            name='vlan_management_onu',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vlan_management_onu', to='pop_netmanager.Vlan_management_onu', verbose_name='V-LAN GERÊNCIA'),
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=100, verbose_name='Dispositivo')),
                ('ipv4_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Address - IPV4')),
                ('ipv6_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Address - IPV6')),
                ('s_vlan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='svlan_devices', to='pop_netmanager.Svlan')),
            ],
            options={
                'verbose_name': 'Dispositivo',
                'verbose_name_plural': 'Dispositivos',
                'db_table': '"pop_netmanager"."tb_svlan_devices"',
            },
        ),
        migrations.CreateModel(
            name='AccessPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=50, verbose_name='Hostname-AP')),
                ('serial', models.CharField(max_length=50, verbose_name='S/N')),
                ('mac_address', models.CharField(max_length=12, verbose_name='Endereço MAC')),
                ('wlan_aluno', models.CharField(max_length=50, verbose_name='Wlan Aluno')),
                ('wlan_admin', models.CharField(max_length=50, verbose_name='Wlan Admin')),
                ('switch_port', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pop_netmanager.Switch_port')),
                ('vlan_management_ap', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vlan_management_ap', to='pop_netmanager.Vlan_management_ap', verbose_name='GERÊNCIA-AP')),
            ],
            options={
                'verbose_name': 'Access Point',
                'verbose_name_plural': 'Access Points',
                'db_table': '"pop_netmanager"."tb_accesspoints"',
            },
        ),
    ]
